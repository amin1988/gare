<?phpif (!defined("_BASEDIR_")) exit();include_model("Organizzatore", "Gara", "GruppoCat", "Allegato");include_errori("VerificaGara");abstract class GestioneGara {	/** @var Organizzatore */	protected $ut;	protected $errori;		public function __construct($nuova) {		$this->ut = Organizzatore::crea();		if (is_null($this->ut)) nologin();				if (!$this->controlli()) return;				//verifica errori		$this->errori = new VerificaGara($nuova);		if (isset($_POST["nome"]) && !$this->errori->haErrori())	 		$this->salvaGara();			}		protected function controlli() {		return true;	}		public static function getTipiLocandina() {		return array("jpg", "jpeg", "gif", "png");	}		public function getErrori() {		return $this->errori;	}		protected abstract function salvaGara();		protected function salvaLocandina($gara, $salva) {		if (!isset($_POST["chkloc"])) {			if ($salva) $gara->salva();			return;		}		$loc = false;		if (isset($_FILES["locandina"]) && $_FILES["locandina"]["error"] == UPLOAD_ERR_OK) {			//TODO test immagine con getimagesize  			$est = pathinfo($_FILES["locandina"]["name"],PATHINFO_EXTENSION);			$loc = true;			$gara->setLocandina($est);		}		if ($salva) $gara->salva();		if ($loc) {			move_uploaded_file($_FILES["locandina"]["tmp_name"],					_BASEDIR_.$gara->getLocandina());		}	}		protected function salvaAllegati($idgara) {		if (isset($_POST["doc"])) {			foreach ($_POST["doc"] as $id) {				$docid="docfile_$id";				if (isset($_FILES[$docid]) && $_FILES[$docid]["error"] == UPLOAD_ERR_OK) {					$tmp = $_FILES[$docid]["tmp_name"];					$file = $_FILES[$docid]["name"];					$nome = $_POST["nomedoc"][$id];					$a = Allegato::nuovo($idgara, $nome, $file);					move_uploaded_file($tmp, _BASEDIR_.$a->getUrl());					$a->salva();				}			}		}	}		public function pulisciDescrizione() {		return stripslashes($_POST["descrizione"]);	}		public function getUtente() {		return $this->ut;	}		protected function getValue($campo, $default="") {		if (isset($_POST[$campo])) return $_POST[$campo];		else return $default;	}		protected function getArrayValue($campo, $id, $default="") {		if (isset($_POST[$campo]) && isset($_POST[$campo][$id])) return $_POST[$campo][$id];		else return $default;	}		public function leggiData($valore) {		//formato dd/mm/yyyy		if (!preg_match('/^(\d\d?)\/(\d\d?)\/(\d{4})$/', trim($valore), $m))			return NULL;		return new Data("$m[3]-$m[2]-$m[1]");	}		public function leggiFloat($valore) {		return str_replace(',', '.', trim($valore));	}		public function isDocSelezionato($i) {		return isset($_POST["doc"][$i]);	}		public function getNomeDoc($i) {		return $this->getArrayValue("nomedoc", $i);	}		public abstract function getNome();		public abstract function isPubblica();		public abstract function usaPeso();		public abstract function getDataGara();		public abstract function getDataFineGara();		public abstract function haDataFineGara();		public abstract function getChiusura();		public abstract function getMinCoach();		public abstract function getMaxCoach();	public abstract function getFotoCoach();		public abstract function getPagamentoCoach();		public abstract function getPrezzoIndiv();		public abstract function getPrezzoSquadre();		public abstract function getPrezzoCoach();		public abstract function getRimborsoArb();		public abstract function getDescrizione();		public abstract function locandinaSelezionata();        	public abstract function getTipoGara();        	public abstract function isZonaSelezionata($idzona);		public abstract function getZone();		}